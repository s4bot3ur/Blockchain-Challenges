import rlp
from eth_utils import keccak, to_hex

def build_eip1559_tx():
    return [
        31337,                 # chain_id
        0,                     # nonce
        1,                     # max_priority_fee_per_gas
        2000000001,            # max_fee_per_gas
        758283,                # gas_limit
        b'',                  # to (empty = contract creation)
        0,                     # value
        bytes.fromhex("608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101af565b60405180910390fd5b610090816100af60201b60201c565b505f5f60146101000a81548160ff0219169083151502179055506101c8565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019982610170565b9050919050565b6101a98161018f565b82525050565b5f6020820190506101c25f8301846101a0565b92915050565b61090f806101d55f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c8063890d690811610059578063890d6908146100c55780638da5cb5b146100cf578063ed4aa092146100ed578063f2fde38b146101095761007b565b806364d98f6e1461007f578063715018a61461009d578063799320bb146100a7575b5f5ffd5b610087610125565b60405161009491906105a2565b60405180910390f35b6100a561013a565b005b6100af61014d565b6040516100bc91906105a2565b60405180910390f35b6100cd61015f565b005b6100d7610183565b6040516100e491906105fa565b60405180910390f35b610107600480360381019061010291906106aa565b6101aa565b005b610123600480360381019061011e9190610721565b6102f6565b005b5f5f60149054906101000a900460ff16905090565b61014261037a565b61014b5f610401565b565b5f60149054906101000a900460ff1681565b61016761037a565b60015f60146101000a81548160ff021916908315150217905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020f906107cc565b60405180910390fd5b5f6001838787876040515f815260200160405260405161023b9493929190610808565b6020604051602081039080840390855afa15801561025b573d5f5f3e3d5ffd5b50505060206040510351905061026f610183565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d3906108bb565b60405180910390fd5b6102e5816104c2565b6102ee82610401565b505050505050565b6102fe61037a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361036e575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161036591906105fa565b60405180910390fd5b61037781610401565b50565b61038261055b565b73ffffffffffffffffffffffffffffffffffffffff166103a0610183565b73ffffffffffffffffffffffffffffffffffffffff16146103ff576103c361055b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103f691906105fa565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610558816040516024016104d691906105fa565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610562565b50565b5f33905090565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f5f8483855afa5050505050565b5f8115159050919050565b61059c81610588565b82525050565b5f6020820190506105b55f830184610593565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105e4826105bb565b9050919050565b6105f4816105da565b82525050565b5f60208201905061060d5f8301846105eb565b92915050565b5f5ffd5b5f60ff82169050919050565b61062c81610617565b8114610636575f5ffd5b50565b5f8135905061064781610623565b92915050565b5f819050919050565b61065f8161064d565b8114610669575f5ffd5b50565b5f8135905061067a81610656565b92915050565b610689816105da565b8114610693575f5ffd5b50565b5f813590506106a481610680565b92915050565b5f5f5f5f5f60a086880312156106c3576106c2610613565b5b5f6106d088828901610639565b95505060206106e18882890161066c565b94505060406106f28882890161066c565b93505060606107038882890161066c565b925050608061071488828901610696565b9150509295509295909350565b5f6020828403121561073657610735610613565b5b5f61074384828501610696565b91505092915050565b5f82825260208201905092915050565b7f4e6577206f776e65722073686f756c64206e6f7420626520746865207a65726f5f8201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b5f6107b660288361074c565b91506107c18261075c565b604082019050919050565b5f6020820190508181035f8301526107e3816107aa565b9050919050565b6107f38161064d565b82525050565b61080281610617565b82525050565b5f60808201905061081b5f8301876107ea565b61082860208301866107f9565b61083560408301856107ea565b61084260608301846107ea565b95945050505050565b7f4e6577206f776e65722073686f756c642068617665206265656e2061757468655f8201527f6e74696361746564000000000000000000000000000000000000000000000000602082015250565b5f6108a560288361074c565b91506108b08261084b565b604082019050919050565b5f6020820190508181035f8301526108d281610899565b905091905056fea2646970667358221220a1e316f1f5de8b968e667ba84aad6dee2f7525be93330cdf1962c21d99e9638464736f6c634300081d0033"),  # data (replace with valid hex)
        []                     # access_list
    ]

def encode_transaction(tx):
    return b'\x02' + rlp.encode(tx)

def compute_tx_hash(encoded_tx):
    return keccak(encoded_tx)

def main():
    tx = build_eip1559_tx()
    encoded_tx = encode_transaction(tx)
    tx_hash = compute_tx_hash(encoded_tx)
    print(to_hex(tx_hash))

if __name__ == "__main__":
    main()
